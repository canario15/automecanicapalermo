c
@work_order.errors.messages
c
WORK_ORDER_STATUS[1]
WORK_ORDER_STATUS[0]
@work_order.status
!@work_order.work_dones.blank?
c
v
c
WORK_ORDER_STATUS[1]
@work_order.status
!@work_order.delivered_by.blank?
(!@work_order.budget.total.blank? || !@work_order.budget.total_dol.blank?)
c
(!@work_order.budget.total.blank? || !@work_order.budget.total_dol.blank?)
c
!@work_order.delivered_by.blank?
@work_order.status == WORK_ORDER_STATUS[1]
c
WORK_ORDER_STATUS[0]
WORK_ORDER_STATUS[1]
@work_order.status
!@work_order.budget.total.blank?
@work_order.status == WORK_ORDER_STATUS[1]
!@work_order.delivered_by.blank?
c
!@work_order.delivered_by.blank?
!@work_order.budget.total.blank?
@work_order.budget.total.blank?
c
@customer.errors.messages.to_json
@customer.errors.messages
@customer.errors.to_json
@customer.errors
c
self.work_order_id = nil
self.work_order_id
self
box_movement
work_order
@work_order
params
c
n
args
n
c
args
n
 cost_center != COST_CENTER_CODE[:tall] && cost_center != COST_CENTER_CODE[:cyp]
cost_center != COST_CENTER_CODE[:tall]
c
params[:months]
c
days
c
day
Time.now.day
days.blank?
c
months
days
days,
c
params[:months]
params[:month]
c
month
c
month
c
paramsc
params
c
@work_order.work_dones.blank?
@work_order.work_dones.count > 0
@work_order.work_dones
c
@work_order.errors
~@work_order.errors
c
n
@customer.vehicles.first
@customer.vehicles
@customer
n
customer_params
c
@work_order.budget.create
@work_order.build.create
@work_order.build.budget
@work_order.budget
@work_order
c
work_order_params
c
work_order_params
c
@customer.errors[:"vehicles.color"]
@customer.errors[:"vehicle.color"]
@customer.errors[:owner]
@customer.errors
@customer.vehicle.errors
@customer.vehicles.errors
@customer.errors
c
@customer.errors[:vehicles.model]
@customer.errors[:vehicle]
@customer.errors[:vehicles]
@customer.errors
c
@customer.errors
@customer
c
c.
params[:id] == 0
params[:id]
c
v
params[:id] == 0
.c
c
n
~c
c
vehicles
c
params[:id]
params
exception
n
Customer.find(params[:id])
params[:id]
c
@customer.errors
@customer.update(customer_params)
@customer.errors
@customer.errors?
customer_params
c
vehicle
c
params
c
@customers
c
view_context
c
~
